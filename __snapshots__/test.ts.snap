export const snapshot = {};

snapshot[`parseJson > parses array-0.json 1`] = `
{
  elementType: {
    kind: "primitive",
    name: "number",
  },
  kind: "array",
}
`;

snapshot[`parseJson > parses array-1.json 1`] = `
{
  elementType: {
    fields: Map(2) {
      "key1" => {
        kind: "primitive",
        name: "string",
      },
      "key2" => {
        kind: "primitive",
        name: "string",
      },
    },
    kind: "struct",
  },
  kind: "array",
}
`;

snapshot[`parseJson > parses array-2.json 1`] = `
{
  elementType: {
    fields: Map(3) {
      "key1" => {
        kind: "primitive",
        name: "string",
      },
      "key2" => {
        kind: "primitive",
        name: "string",
      },
      "optional" => {
        kind: "option",
        valueType: {
          kind: "primitive",
          name: "string",
        },
      },
    },
    kind: "struct",
  },
  kind: "array",
}
`;

snapshot[`parseJson > parses array-3.json 1`] = `
{
  elementType: {
    kind: "map",
    valueType: {
      kind: "primitive",
      name: "string",
    },
  },
  kind: "array",
}
`;

snapshot[`parseJson > parses array-4.json 1`] = `
{
  elementType: {
    kind: "map",
    valueType: {
      kind: "enum",
      variants: Map(2) {
        "primitive" => {
          kind: "enum",
          variants: Map(2) {
            "number" => {
              kind: "primitive",
              name: "number",
            },
            "string" => {
              kind: "primitive",
              name: "string",
            },
          },
        },
        "struct" => {
          fields: Map(1) {
            "key4" => {
              kind: "primitive",
              name: "string",
            },
          },
          kind: "struct",
        },
      },
    },
  },
  kind: "array",
}
`;

snapshot[`parseJson > parses boolean-false.json 1`] = `
{
  kind: "primitive",
  name: "boolean",
}
`;

snapshot[`parseJson > parses boolean-true.json 1`] = `
{
  kind: "primitive",
  name: "boolean",
}
`;

snapshot[`parseJson > parses map-0.json 1`] = `
{
  kind: "map",
  valueType: {
    kind: "primitive",
    name: "number",
  },
}
`;

snapshot[`parseJson > parses map-1.json 1`] = `
{
  kind: "map",
  valueType: {
    kind: "primitive",
    name: "number",
  },
}
`;

snapshot[`parseJson > parses map-2.json 1`] = `
{
  kind: "map",
  valueType: {
    kind: "primitive",
    name: "number",
  },
}
`;

snapshot[`parseJson > parses null.json 1`] = `
{
  kind: "null",
}
`;

snapshot[`parseJson > parses number-negative.json 1`] = `
{
  kind: "primitive",
  name: "number",
}
`;

snapshot[`parseJson > parses number-positive.json 1`] = `
{
  kind: "primitive",
  name: "number",
}
`;

snapshot[`parseJson > parses number-zero.json 1`] = `
{
  kind: "primitive",
  name: "number",
}
`;

snapshot[`parseJson > parses object-0.json 1`] = `
{
  fields: Map(1) {
    "key" => {
      kind: "primitive",
      name: "string",
    },
  },
  kind: "struct",
}
`;

snapshot[`parseJson > parses object-1.json 1`] = `
{
  fields: Map(1) {
    "key" => {
      kind: "primitive",
      name: "number",
    },
  },
  kind: "struct",
}
`;

snapshot[`parseJson > parses object-2.json 1`] = `
{
  fields: Map(1) {
    "key" => {
      kind: "primitive",
      name: "boolean",
    },
  },
  kind: "struct",
}
`;

snapshot[`parseJson > parses object-3.json 1`] = `
{
  fields: Map(1) {
    "key" => {
      elementType: {
        kind: "primitive",
        name: "string",
      },
      kind: "array",
    },
  },
  kind: "struct",
}
`;

snapshot[`parseJson > parses object-4.json 1`] = `
{
  fields: Map(1) {
    "key" => {
      fields: Map(1) {
        "key" => {
          kind: "primitive",
          name: "string",
        },
      },
      kind: "struct",
    },
  },
  kind: "struct",
}
`;

snapshot[`parseJson > parses object-5.json 1`] = `
{
  fields: Map(1) {
    "key" => {
      kind: "null",
    },
  },
  kind: "struct",
}
`;

snapshot[`parseJson > parses object-6.json 1`] = `
{
  fields: Map(1) {
    "key" => {
      elementType: {
        fields: Map(1) {
          "key" => {
            kind: "primitive",
            name: "string",
          },
        },
        kind: "struct",
      },
      kind: "array",
    },
  },
  kind: "struct",
}
`;

snapshot[`parseJson > parses object-7.json 1`] = `
{
  fields: Map(1) {
    "key" => {
      elementType: {
        kind: "enum",
        variants: Map(2) {
          "boolean" => {
            kind: "primitive",
            name: "boolean",
          },
          "string" => {
            kind: "primitive",
            name: "string",
          },
        },
      },
      kind: "array",
    },
  },
  kind: "struct",
}
`;

snapshot[`parseJson > parses object-8.json 1`] = `
{
  fields: Map(8) {
    "key1" => {
      kind: "primitive",
      name: "boolean",
    },
    "key2" => {
      kind: "primitive",
      name: "boolean",
    },
    "key3" => {
      kind: "null",
    },
    "key4" => {
      kind: "primitive",
      name: "number",
    },
    "key5" => {
      kind: "primitive",
      name: "number",
    },
    "key6" => {
      kind: "primitive",
      name: "string",
    },
    "key7" => {
      elementType: {
        kind: "primitive",
        name: "number",
      },
      kind: "array",
    },
    "key8" => {
      fields: Map(1) {
        "key1" => {
          kind: "primitive",
          name: "string",
        },
      },
      kind: "struct",
    },
  },
  kind: "struct",
}
`;

snapshot[`emitTypes > emit array-0.json 1`] = `
"pub type Root = Vec<f64>;
"
`;

snapshot[`emitTypes > emit array-1.json 1`] = `
"pub struct T0 {
  key1: String,
  key2: String,
}
pub type Root = Vec<T0>;
"
`;

snapshot[`emitTypes > emit array-2.json 1`] = `
"pub struct T0 {
  key1: String,
  key2: String,
  optional: Option<String>,
}
pub type Root = Vec<T0>;
"
`;

snapshot[`emitTypes > emit array-3.json 1`] = `
"pub type Root = Vec<std::collections::HashMap<String, String>>;
"
`;

snapshot[`emitTypes > emit array-4.json 1`] = `
"pub enum T2 {
  number(f64),
  string(String),
}
pub struct T5 {
  key4: String,
}
pub enum T1 {
  primitive(T2),
  struct(T5),
}
pub type Root = Vec<std::collections::HashMap<String, T1>>;
"
`;

snapshot[`emitTypes > emit boolean-false.json 1`] = `
"pub type Root = bool;
"
`;

snapshot[`emitTypes > emit boolean-true.json 1`] = `
"pub type Root = bool;
"
`;

snapshot[`emitTypes > emit map-0.json 1`] = `
"pub type Root = std::collections::HashMap<String, f64>;
"
`;

snapshot[`emitTypes > emit map-1.json 1`] = `
"pub type Root = std::collections::HashMap<String, f64>;
"
`;

snapshot[`emitTypes > emit map-2.json 1`] = `
"pub type Root = std::collections::HashMap<String, f64>;
"
`;

snapshot[`emitTypes > emit null.json 1`] = `
"pub type Root = ();
"
`;

snapshot[`emitTypes > emit number-negative.json 1`] = `
"pub type Root = f64;
"
`;

snapshot[`emitTypes > emit number-positive.json 1`] = `
"pub type Root = f64;
"
`;

snapshot[`emitTypes > emit number-zero.json 1`] = `
"pub type Root = f64;
"
`;

snapshot[`emitTypes > emit object-0.json 1`] = `
"pub struct Root {
  key: String,
}
"
`;

snapshot[`emitTypes > emit object-1.json 1`] = `
"pub struct Root {
  key: f64,
}
"
`;

snapshot[`emitTypes > emit object-2.json 1`] = `
"pub struct Root {
  key: bool,
}
"
`;

snapshot[`emitTypes > emit object-3.json 1`] = `
"pub struct Root {
  key: Vec<String>,
}
"
`;

snapshot[`emitTypes > emit object-4.json 1`] = `
"pub struct T0 {
  key: String,
}
pub struct Root {
  key: T0,
}
"
`;

snapshot[`emitTypes > emit object-5.json 1`] = `
"pub struct Root {
  key: (),
}
"
`;

snapshot[`emitTypes > emit object-6.json 1`] = `
"pub struct T1 {
  key: String,
}
pub struct Root {
  key: Vec<T1>,
}
"
`;

snapshot[`emitTypes > emit object-7.json 1`] = `
"pub enum T1 {
  boolean(bool),
  string(String),
}
pub struct Root {
  key: Vec<T1>,
}
"
`;

snapshot[`emitTypes > emit object-8.json 1`] = `
"pub struct T8 {
  key1: String,
}
pub struct Root {
  key1: bool,
  key2: bool,
  key3: (),
  key4: f64,
  key5: f64,
  key6: String,
  key7: Vec<f64>,
  key8: T8,
}
"
`;
